@import url("../_custom-media.css");

.hds-button {
  --hds-component-button-border-width: 0px;

  -webkit-font-smoothing: antialiased;
  appearance: button;
  box-sizing: border-box;
  display: inline-block;
  border-style: solid;
  border-radius: var(--hds-border-radius);
  border-width: var(--hds-component-button-border-width);
  transition: all var(--hds-micro-animation-duration-quick) var(--hds-micro-animation-easing-normal);
  cursor: pointer;
  word-break: normal;
  font: var(--hds-typography-body-small-title);

  /* When used as a link (<a>) */
  text-decoration: none;
  text-align: center;

  /**
   * Modifiers: sizes
   */
  &.hds-button--small {
    /* In figma, the actual padding for the text is 10px */
    --hds-component-button-small-y-padding: 10px;

    font-size: var(--hds-font-size-technical-title-max);
    line-height: var(--hds-line-height-technical-title-max);
    padding: calc(
        var(--hds-component-button-small-y-padding) - var(--hds-component-button-border-width)
      )
      calc(var(--hds-spacing-small-4) - var(--hds-component-button-border-width));

    /* The height can be more if the text inside the button wraps */
    min-height: 44px;
  }

  &.hds-button--medium {
    font-size: var(--hds-font-size-body-small-title-max);
    line-height: var(--hds-line-height-body-small-title-max);
    padding: calc(var(--hds-spacing-small-3) - var(--hds-component-button-border-width))
      calc(var(--hds-spacing-medium-1) - var(--hds-component-button-border-width));

    /* The height can be more if the text inside the button wraps */
    min-height: 50px;
  }

  &.hds-button--large {
    font-size: var(--hds-font-size-body-small-title-max);
    line-height: var(--hds-line-height-body-small-title-max);
    padding: calc(var(--hds-spacing-small-4) - var(--hds-component-button-border-width))
      calc(var(--hds-spacing-medium-2) - var(--hds-component-button-border-width));

    /* The height can be more if the text inside the button wraps */
    min-height: 58px;
  }

  /**
   * Modifiers: Width
   */

  &.hds-button--full {
    width: 100%;
  }

  &.hds-button--mobile-full {
    @media (--before-medium) {
      width: 100%;
    }
  }

  /**
   * Modifiers: Variants
   */

  &.hds-button--primary {
    background-color: var(--hds-ui-colors-black);
    color: var(--hds-button-colors-text);
    fill: var(--hds-button-colors-text);

    &:hover {
      background-color: var(--hds-colors-signature-hover);
      outline: 0 solid var(--hds-colors-signature-hover);
    }

    &:active {
      background-color: var(--hds-colors-signature);
      outline: 0 solid var(--hds-colors-signature-hover);
    }
  }

  &.hds-button--secondary {
    background-color: var(--hds-colors-darker);
    color: var(--hds-ui-colors-white);
    fill: var(--hds-ui-colors-white);

    &:hover {
      background-color: var(--hds-ui-colors-black);
      outline: 0 solid var(--hds-ui-colors-black);
    }

    &:active {
      background-color: var(--hds-colors-darker);
      outline: 0 solid var(--hds-ui-colors-black);
    }
  }

  &.hds-button--outline-primary {
    --hds-component-button-border-width: var(--hds-stroke-default);

    background-color: transparent;
    border-color: var(--hds-colors-signature);
    color: var(--hds-ui-colors-black);
    fill: var(--hds-ui-colors-black);
    outline-offset: 3px;

    &:hover,
    &:active {
      color: var(--hds-colors-dark);
      fill: var(--hds-colors-dark);
      border-color: var(--hds-colors-dark);
    }
  }

  &.hds-button--outline-secondary {
    --hds-component-button-border-width: var(--hds-stroke-default);

    background-color: transparent;
    border-color: var(--hds-colors-darker);
    color: var(--hds-colors-darker);
    fill: var(--hds-colors-darker);
    outline-offset: 3px;

    &:hover,
    &:active {
      color: var(--hds-ui-colors-black);
      fill: var(--hds-ui-colors-black);
      border-color: var(--hds-ui-colors-black);
    }
  }

  &.hds-button--outline-white {
    --hds-component-button-border-width: var(--hds-stroke-default);

    background-color: transparent;
    border-color: var(--hds-colors-light);
    color: var(--hds-ui-colors-white);
    fill: var(--hds-ui-colors-white);
    outline-offset: 3px;

    &:hover,
    &:active {
      color: var(--hds-colors-light);
      fill: var(--hds-colors-light);
    }
  }

  /**
   * State: Disabled
   */

  &:disabled,
  &[disabled],
  &[disabled]:active {
    &.hds-button--primary,
    &.hds-button--secondary {
      color: var(--hds-ui-colors-dark-grey);
      fill: var(--hds-ui-colors-dark-grey);
      background-color: var(--hds-ui-colors-grey);
      border-color: var(--hds-ui-colors-grey);
      outline: 0;
      box-shadow: none;
      cursor: default;
    }

    &.hds-button--outline-primary,
    &.hds-button--outline-secondary {
      border-color: var(--hds-ui-colors-grey);
      color: var(--hds-ui-colors-dark-grey);
      fill: var(--hds-ui-colors-dark-grey);
      background-color: transparent;
      cursor: default;
    }
  }

  /**
  * Variant: Icon only
  * TODO: Support text + icon on either left or right side.
  * See button component in digdir/designsystemet and nav/aksel
  */
  &.hds-button--icon-only {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 0;

    /**
    * Modifiers: sizes
    *
    * TODO: Consider/figure out using css variables for these values
    * must make sense, not just choosing a value that matches for the sake of it
    */

    &.hds-button--small {
      height: 44px;
      width: 44px;

      & * {
        height: 24px;
        width: 24px;
      }
    }

    &.hds-button--medium {
      height: 50px;
      width: 50px;

      & * {
        height: 32px;
        width: 32px;
      }
    }

    &.hds-button--large {
      height: 58px;
      width: 58px;

      & * {
        height: 32px;
        width: 32px;
      }
    }
  }
}
