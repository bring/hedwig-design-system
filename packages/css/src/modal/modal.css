@import url("../_custom-media.css");

.hds-modal {
  /* Reset `dialog` element border */
  border: none;
  max-width: var(--hds-breakpoint-small);

  /* Make the dialog appear in the middle of the viewport where the user opened the modal */
  position: fixed;

  &::backdrop {
    /**
     * Cannot use css variables in ::backdrop, need to hardcode values in css for now.
     * https://stackoverflow.com/questions/58818299/css-variables-not-working-in-dialogbackdrop
     *
     * See
     * --hds-micro-animation-duration-normal
     * --hds-micro-animation-easing-out
     */
    background-color: rgba(0 0 0 / 40%);
    animation: hds-modal-backdrop-fade-in 0.3s cubic-bezier(0, 0.45, 0.1, 1);
  }

  &[open] {
    animation: hds-modal-fade-in var(--hds-micro-animation-duration-normal)
      var(--hds-micro-animation-easing-out);
  }

  /* small (460px) + 8px + 8px = 476px */
  @media (width < 476px) {
    margin-left: var(--hds-spacing-small-2);
    margin-right: var(--hds-spacing-small-2);
  }

  .hds-modal__header {
    font: var(--hds-typography-body-title);

    /* Make sure text is not overlapping or is right next to the close (x) button */
    padding-right: 16px;
  }

  .hds-modal__content {
    margin-top: var(--hds-spacing-medium-2);
  }

  .hds-modal__footer {
    margin-top: var(--hds-spacing-medium-2);
  }
}

/*
 * When the modal is open we don't want the rest of the page to be scrollable
 * Apply this class to the body when the modal is open
 */
.hds-modal-scroll-lock {
  overflow: hidden;
}

/**
 * Animation
 */
@keyframes hds-modal-backdrop-fade-in {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

@keyframes hds-modal-fade-in {
  0% {
    opacity: 0;
    transform: translate3d(0, calc(5% + 4px), 0);
  }

  50% {
    opacity: 1;
  }

  100% {
    transform: none;
  }
}
