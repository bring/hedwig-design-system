@import url("../_custom-media.css");
@import url("../_icons.css");

.hds-accordion {
  --hds-accordion-icon-dimension: 24px;
  --hds-component-accordion-content-spacing: var(--hds-spacing-32);
  --hds-component-accordion-header-spacing-between: var(--hds-spacing-16);

  @media (--medium) {
    --hds-component-accordion-content-spacing: var(--hds-spacing-48);
    --hds-component-accordion-header-spacing-between: var(--hds-spacing-24);
  }

  display: block;
  border: none;
  border-bottom: var(--hds-stroke-default) solid var(--hds-ui-colors-light-grey-stroke);
  font: var(--hds-typography-body);
  fill: var(--hds-ui-colors-black);
  color: var(--hds-ui-colors-black);

  .hds-accordion-item {
    overflow: hidden;

    &:first-child .hds-accordion-item-header {
      border: 0 none;
    }

    .hds-accordion-item-header {
      cursor: pointer;
      display: grid;
      grid-template-columns: 24px auto;
      grid-gap: var(--hds-spacing-16);
      width: 100%;
      padding: var(--hds-component-accordion-header-spacing-between) 0;
      border: 0;
      border-top: var(--hds-stroke-default) solid var(--hds-ui-colors-light-grey-stroke);
      text-align: left;
      background-color: transparent;
      font: var(--hds-typography-body);

      &:hover {
        color: var(--hds-colors-dark);
        outline: 0;
      }

      &::before {
        content: "";
        width: var(--hds-accordion-icon-dimension);
        height: var(--hds-accordion-icon-dimension);
        background-image: var(--_hds-icons-cheveron-down-dark);

        /* Optionally animate the cheveron.
           As of 31. jan 2024 I think it looks nicer without animation on the cheveron.
           The height animation is sufficient to indicate open/close.
         */

        /* transition: transform var(--hds-micro-animation-duration-quick)
            var(--hds-micro-animation-easing-normal); */
      }

      &[data-state="open"] {
        color: var(--hds-colors-dark);
      }

      &[data-state="open"]::before {
        transform: rotate(180deg);
      }
    }

    .hds-accordion-item-content {
      padding: 0 0 var(--hds-component-accordion-content-spacing) var(--hds-spacing-40);
      font: var(--hds-typography-body-small);

      /*
       * Animate open/close
       * https://keithjgrant.com/posts/2023/04/transitioning-to-height-auto/
       */
      display: grid;
      grid-template-rows: 1fr;
      transition-property: grid-template-rows, padding-bottom;
      transition-duration: var(--hds-micro-animation-duration-quick);
      transition-timing-function: var(--hds-micro-animation-easing-normal);

      &:not([data-state="open"]) {
        padding-bottom: 0;
        grid-template-rows: 0fr;
      }

      .hds-accordion-item-content-inner {
        overflow: hidden;
      }
    }
  }

  &.hds-accordion--no-indent {
    .hds-accordion-item {
      .hds-accordion-item-content {
        padding-left: 0;
      }
    }
  }
}

/*
hds-accordion-item__expanded
hds-accordion-item-header--open
hds-accordion-item-content--closed
*/
